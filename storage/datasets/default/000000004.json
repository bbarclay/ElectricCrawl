{
	"title": "Developer Quickstart - Builder.io",
	"url": "https://www.builder.io/c/docs/devtools",
	"html": "Developer Quickstart\n\nYou can skip manual integration and let Builder's Devtools handle the details for you.\n\nBuilder Devtools automatically integrates your app with Builder's Visual Headless CMS and provides an intuitive UI for registering components and managing content.\n\nCurrently, Builder Devtools supports integration with React, Next.js, Remix, Angular, and Qwik.\n\nNeed another framework? While we add more frameworks, refer to Integrate Pages to integrate with other frameworks.\n\nInstall Builder Devtools\nFramework\nReact\n​\nMeta-Framework\nNext.js (Pages Router)\n​\nSDK Generation\nGen 1\n​\n\nIn the root of your project, run the following command to install Builder Devtools:\n\nnpm init builder.io@latest\n\nWhen prompted, respond Yes to integrating with Builder.io:\n\nAccess the Builder Devtools UI\n\nTip: If you're using React Webpack and Vite, you can skip this part as you've already covered it above. React Webpack and Vite require adding a route, so the UI is slightly different.\n\nWith the development server running, access the Builder Devtools UI:\n\nOpen your web browser and navigate to your project's local development URL; for example, http://localhost:3000/ or http://localhost:5173/. The port might be different for you.\nClick the Let's get started button.\nChoose a Space to authorize for integration and click Authorize.\nClick the Go to your app button.\nOn the bottom right, click on the Builder logo to get to your components, settings, and to add a Builder Page.\n\nTip: If you're using Windows, you might need to restart your dev server.\n\nThe video below shows authorizing and connecting to a Builder Space.\n\nRegister components\n\nThe Devtools drawer displays all of your components, both registered and unregistered. From here, you can:\n\nRegister components: toggle components on to register them with Builder.\nView and edit registered components: Interact with your registered components directly from the Devtools UI. You can rename, register, and edit inputs.\nVisualize content: Display content that's in Builder and click on an overlay to jump into any Builder element directly in the Visual Editor.\n\nTo register your components with Builder:\n\nOpen the Devtools drawer by clicking on the Builder logo on the bottom right.\nClick Components to display all of the components, registered or not, in your code base.\nSelect a component.\nToggle on to register the component. The code to register the component is added automatically to your code.\n\nThe next video shows this process by registering a Counter component:\n\nThe next video shows registering a component and editing its name in Devtools. At the end of the video, notice that the Devtools edit that changes the component's name from Footer to MyFooter, updates in the code editor.\n\nTip: When registering components, Devtools can recognize most input types; however, more complex types require manual coding. If you want to add lists and objects, read about them in Input Types in Builder.\n\nShare your feedback\n\nDevtools is under active development, and we'd love to know what you think. Your feedback helps us meet the real-world needs of Builder's community and we couldn't do it without you!\n\nWhat's next\n\nWith your app and Builder working together, the next step is the fun part — add some pages in Builder and drag in some elements. Play with styles and explore the UI.\n\nDeploy your updated app to a preview environment\n\nIntegrate Custom Components\n\nIntegrate Design Tokens\n"
}